from datasets import load_dataset
import os
import cv2
import numpy as np
import matplotlib.pyplot as plt

# Charger le dataset SKIPP'D depuis Hugging Face
ds = load_dataset("skyimagenet/SKIPPD")

# Dossier où enregistrer les images transformées
output_dir = 'data/skippdun'
if not os.path.exists(output_dir):
    os.makedirs(output_dir)



# Fonction de transformation

def warp(img, UpSampFactor):
    rad = 32 * 1.414
    width_to_height = 3
    cent_x, cent_y = img.shape[1] / 2, img.shape[0] / 2
    new_siz = np.ceil((2 * rad + 1) * UpSampFactor)
    X, Y = np.meshgrid(np.arange(0, new_siz), np.arange(0, new_siz))
    X, Y = 2 * X / new_siz - 1, 2 * Y / new_siz - 1
    X, Y = X * (width_to_height-1), Y * width_to_height
    rho0, phi0 = np.sqrt(X**2 + Y**2), np.angle(X + 1j * Y)
    s0 = 4 * rad * rho0 * (-1 + (1 + 3 * (1 + rho0**2))**0.5) / (8 * (1 + rho0**2))
    X_res, Y_res = cent_x + s0 * np.cos(phi0), cent_y + s0 * np.sin(phi0)
    
    if len(img.shape) == 2:
        im_warp = cv2.remap(img, np.float32(X_res), np.float32(Y_res), cv2.INTER_LINEAR)
    else:
        im_warp = np.zeros((X_res.shape[0], X_res.shape[1], img.shape[2]))
        for ch in range(img.shape[2]):
            im_warp[:, :, ch] = cv2.remap(img[:, :, ch], np.float32(X_res), np.float32(Y_res), cv2.INTER_CUBIC)
    return im_warp

# Appliquer la transformation aux images du dataset
for idx, sample in enumerate(ds['train'][:10]):  # Limite à 10 images pour l'exemple
    img = np.array(sample['image'])  # Convertir PIL -> NumPy
    im_warp = warp(img, UpSampFactor=1)
    im_warp = np.clip(im_warp, 0, 255).astype(np.uint8)
    output_image_path = os.path.join(output_dir, f'unwrapped_{idx}.png')
    plt.imsave(output_image_path, im_warp, cmap='gray')
    print(f"Image enregistrée : {output_image_path}")

print("Traitement terminé pour les images du dataset SKIPP'D !")